<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bash | You Sharp]]></title>
  <link href="http://nkcoder.github.io/blog/categories/bash/atom.xml" rel="self"/>
  <link href="http://nkcoder.github.io/"/>
  <updated>2014-01-11T23:32:08+08:00</updated>
  <id>http://nkcoder.github.io/</id>
  <author>
    <name><![CDATA[lingguo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[bash for循环用法示例]]></title>
    <link href="http://nkcoder.github.io/blog/20140105/bash-for-loop-by-example/"/>
    <updated>2014-01-05T14:36:30+08:00</updated>
    <id>http://nkcoder.github.io/blog/20140105/bash-for-loop-by-example</id>
    <content type="html"><![CDATA[<blockquote>
  <p>来源：<a href="http://www.cyberciti.biz/faq/bash-for-loop/">Bash For Loop Examples</a>  编译：lingguo</p>
</blockquote>

<h4 id="for">1. for循环的第一种形式：</h4>

<pre><code>{% highlight bash %}
for variable in 1 2 3 4 5
do
    command
done
{% endhighlight bash %}
</code></pre>

<p>示例1：</p>

<pre><code>{% highlight bash %}
#!/bin/bash
for i in 1 2 3 4 5
do
   echo "Welcome $i times"
done
{% endhighlight %}
</code></pre>

<p>连续的值，可以通过{start..end}缩写，如1 2 3 4 5可以表示为：{1..5}，如：
示例2：</p>

<pre><code>{% highlight bash %}
#!/bin/bash
for i in {1..5}
do
   echo "Welcome $i times"
done
{% endhighlight %}
</code></pre>

<!--more-->
<p>bash 4.0及以上，支持设置变量的自增的步数，语法是：{start..end..increment}, 如：
示例3：</p>

<pre><code>{% highlight bash %}
#!/bin/bash
echo "Bash version ${BASH_VERSION}..."
for i in {0..10..2}
  do
     echo "Welcome $i times"
done
{% endhighlight %}
</code></pre>

<p>使用for遍历文件，语法为：</p>

<pre><code>{% highlight bash %}
for file in file1 file2 file3 file4
do
    commands
done
{% endhighlight %}
</code></pre>

<p>示例4：</p>

<pre><code>{% highlight bash %}
#!/bin/bash
for file in /etc/*
do
	if [ "${file}" == "/etc/resolv.conf" ]
	then
		countNameservers=$(grep -c nameserver /etc/resolv.conf)
		echo "Total  ${countNameservers} nameservers defined in ${file}"
		break
	fi
done
{% endhighlight %}
</code></pre>

<p>其中for file in /etc/* 等价于：</p>

<pre><code>for file in `ls /etc/*`    
for file in $(ls /etc/*)
</code></pre>

<h4 id="for-1">2. for循环的第二种形式：</h4>
<p>与C语言for循环类似的语法：</p>

<pre><code>for (( EXP1; EXP2; EXP3 ))
do
	commands
done
</code></pre>

<p>示例5：</p>

<pre><code>{% highlight bash %}
#!/bin/bash
for (( c=1; c&lt;=5; c++ ))
do
   echo "Welcome $c times"
done
{% endhighlight %}
</code></pre>

<p>当for的EXP1，EXP2，EXP3都为空时，即为无限循环：
示例6：</p>

<pre><code>{% highlight bash %}
#!/bin/bash
for (( ; ; ))
do
   echo "infinite loops [ hit CTRL+C to stop]"
done
{% endhighlight %}
</code></pre>

<h4 id="forbreakcontinuec">3. for循环也支持break和continue关键字，与C语言一致</h4>
<p>示例7：</p>

<pre><code>{% highlight bash %}
#!/bin/bash
for file in /etc/*
do
	if [ "${file}" == "/etc/resolv.conf" ]
	then
		countNameservers=$(grep -c nameserver /etc/resolv.conf)
		echo "Total  ${countNameservers} nameservers defined in ${file}"
		break
	fi
done
{% endhighlight %}
</code></pre>

<p>示例8：</p>

<pre><code>{% highlight bash %}
#!/bin/bash
FILES="$@"
for f in $FILES
do
	# if .bak backup file exists, read next file
	if [ -f ${f}.bak ]
	then
		echo "Skiping $f file..."
		continue  # read next file and skip cp command
	fi
	# we are hear means no backup file exists, just use cp command to copy file
	/bin/cp $f $f.bak
done
{% endhighlight %}
</code></pre>

]]></content>
  </entry>
  
</feed>
